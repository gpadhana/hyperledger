// Code generated by protoc-gen-go. DO NOT EDIT.
// source: update_batch.proto

package lockbasedtxmgr

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KVWriteProto struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Collection           string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Key                  []byte   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	IsDelete             bool     `protobuf:"varint,4,opt,name=isDelete,proto3" json:"isDelete,omitempty"`
	Value                []byte   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	VersionBytes         []byte   `protobuf:"bytes,6,opt,name=version_bytes,json=versionBytes,proto3" json:"version_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVWriteProto) Reset()         { *m = KVWriteProto{} }
func (m *KVWriteProto) String() string { return proto.CompactTextString(m) }
func (*KVWriteProto) ProtoMessage()    {}
func (*KVWriteProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8166e034ebfc04c, []int{0}
}

func (m *KVWriteProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVWriteProto.Unmarshal(m, b)
}
func (m *KVWriteProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVWriteProto.Marshal(b, m, deterministic)
}
func (m *KVWriteProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVWriteProto.Merge(m, src)
}
func (m *KVWriteProto) XXX_Size() int {
	return xxx_messageInfo_KVWriteProto.Size(m)
}
func (m *KVWriteProto) XXX_DiscardUnknown() {
	xxx_messageInfo_KVWriteProto.DiscardUnknown(m)
}

var xxx_messageInfo_KVWriteProto proto.InternalMessageInfo

func (m *KVWriteProto) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *KVWriteProto) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *KVWriteProto) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KVWriteProto) GetIsDelete() bool {
	if m != nil {
		return m.IsDelete
	}
	return false
}

func (m *KVWriteProto) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KVWriteProto) GetVersionBytes() []byte {
	if m != nil {
		return m.VersionBytes
	}
	return nil
}

type KVWritesBatchProto struct {
	Kvwrites             []*KVWriteProto `protobuf:"bytes,1,rep,name=kvwrites,proto3" json:"kvwrites,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *KVWritesBatchProto) Reset()         { *m = KVWritesBatchProto{} }
func (m *KVWritesBatchProto) String() string { return proto.CompactTextString(m) }
func (*KVWritesBatchProto) ProtoMessage()    {}
func (*KVWritesBatchProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8166e034ebfc04c, []int{1}
}

func (m *KVWritesBatchProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVWritesBatchProto.Unmarshal(m, b)
}
func (m *KVWritesBatchProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVWritesBatchProto.Marshal(b, m, deterministic)
}
func (m *KVWritesBatchProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVWritesBatchProto.Merge(m, src)
}
func (m *KVWritesBatchProto) XXX_Size() int {
	return xxx_messageInfo_KVWritesBatchProto.Size(m)
}
func (m *KVWritesBatchProto) XXX_DiscardUnknown() {
	xxx_messageInfo_KVWritesBatchProto.DiscardUnknown(m)
}

var xxx_messageInfo_KVWritesBatchProto proto.InternalMessageInfo

func (m *KVWritesBatchProto) GetKvwrites() []*KVWriteProto {
	if m != nil {
		return m.Kvwrites
	}
	return nil
}

func init() {
	proto.RegisterType((*KVWriteProto)(nil), "lockbasedtxmgr.KVWriteProto")
	proto.RegisterType((*KVWritesBatchProto)(nil), "lockbasedtxmgr.KVWritesBatchProto")
}

func init() { proto.RegisterFile("update_batch.proto", fileDescriptor_a8166e034ebfc04c) }

var fileDescriptor_a8166e034ebfc04c = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x18, 0xc5, 0x89, 0x73, 0x63, 0x8b, 0x55, 0x24, 0x78, 0x08, 0x32, 0xa4, 0xcc, 0x4b, 0x4f, 0x2d,
	0xe8, 0xc5, 0x73, 0xf1, 0x26, 0x8c, 0xd1, 0x83, 0x82, 0x97, 0x91, 0xa4, 0x9f, 0x6d, 0x68, 0xda,
	0x94, 0x24, 0xad, 0xf6, 0x0f, 0xf3, 0xff, 0x93, 0x66, 0x65, 0x6e, 0xa7, 0x7c, 0xdf, 0xef, 0x3d,
	0x92, 0xf7, 0x82, 0x49, 0xd7, 0xe6, 0xcc, 0xc1, 0x9e, 0x33, 0x27, 0xca, 0xb8, 0x35, 0xda, 0x69,
	0x72, 0xa3, 0xb4, 0xa8, 0x38, 0xb3, 0x90, 0xbb, 0x9f, 0xba, 0x30, 0x9b, 0x5f, 0x84, 0x83, 0xb7,
	0xf7, 0x0f, 0x23, 0x1d, 0xec, 0xbc, 0x61, 0x8d, 0x57, 0x0d, 0xab, 0xc1, 0xb6, 0x4c, 0x00, 0x45,
	0x21, 0x8a, 0x56, 0xd9, 0x3f, 0x20, 0x0f, 0x18, 0x0b, 0xad, 0x14, 0x08, 0x27, 0x75, 0x43, 0x2f,
	0xbc, 0x7c, 0x42, 0xc8, 0x2d, 0x9e, 0x55, 0x30, 0xd0, 0x59, 0x88, 0xa2, 0x20, 0x1b, 0x47, 0x72,
	0x8f, 0x97, 0xd2, 0xbe, 0x82, 0x02, 0x07, 0xf4, 0x32, 0x44, 0xd1, 0x32, 0x3b, 0xee, 0xe4, 0x0e,
	0xcf, 0x7b, 0xa6, 0x3a, 0xa0, 0x73, 0xef, 0x3f, 0x2c, 0xe4, 0x11, 0x5f, 0xf7, 0x60, 0xac, 0xd4,
	0xcd, 0x9e, 0x0f, 0x0e, 0x2c, 0x5d, 0x78, 0x35, 0x98, 0x60, 0x3a, 0xb2, 0xcd, 0x16, 0x93, 0x29,
	0xb6, 0x4d, 0xc7, 0x7a, 0x87, 0xf0, 0x2f, 0x78, 0x59, 0xf5, 0xdf, 0x9e, 0x52, 0x14, 0xce, 0xa2,
	0xab, 0xa7, 0x75, 0x7c, 0x5e, 0x38, 0x3e, 0x2d, 0x9b, 0x1d, 0xdd, 0xe9, 0xee, 0x73, 0x5b, 0x48,
	0x57, 0x76, 0x3c, 0x16, 0xba, 0x4e, 0xca, 0xa1, 0x05, 0xa3, 0x20, 0x2f, 0xc0, 0x24, 0x5f, 0x8c,
	0x1b, 0x29, 0x12, 0xa1, 0x0d, 0x24, 0x13, 0xaa, 0xfa, 0x69, 0x18, 0xaf, 0xac, 0x9d, 0x3f, 0x4c,
	0x72, 0xfe, 0x10, 0x5f, 0xf8, 0x0f, 0x7f, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x86, 0x70,
	0x63, 0x86, 0x01, 0x00, 0x00,
}
