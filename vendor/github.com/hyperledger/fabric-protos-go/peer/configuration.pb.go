// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer/configuration.proto

package peer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// AnchorPeers simply represents list of anchor peers which is used in ConfigurationItem
type AnchorPeers struct {
	AnchorPeers          []*AnchorPeer `protobuf:"bytes,1,rep,name=anchor_peers,json=anchorPeers,proto3" json:"anchor_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AnchorPeers) Reset()         { *m = AnchorPeers{} }
func (m *AnchorPeers) String() string { return proto.CompactTextString(m) }
func (*AnchorPeers) ProtoMessage()    {}
func (*AnchorPeers) Descriptor() ([]byte, []int) {
	return fileDescriptor_4978ae8738390a60, []int{0}
}

func (m *AnchorPeers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorPeers.Unmarshal(m, b)
}
func (m *AnchorPeers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorPeers.Marshal(b, m, deterministic)
}
func (m *AnchorPeers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorPeers.Merge(m, src)
}
func (m *AnchorPeers) XXX_Size() int {
	return xxx_messageInfo_AnchorPeers.Size(m)
}
func (m *AnchorPeers) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorPeers.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorPeers proto.InternalMessageInfo

func (m *AnchorPeers) GetAnchorPeers() []*AnchorPeer {
	if m != nil {
		return m.AnchorPeers
	}
	return nil
}

// AnchorPeer message structure which provides information about anchor peer, it includes host name,
// port number and peer certificate.
type AnchorPeer struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnchorPeer) Reset()         { *m = AnchorPeer{} }
func (m *AnchorPeer) String() string { return proto.CompactTextString(m) }
func (*AnchorPeer) ProtoMessage()    {}
func (*AnchorPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_4978ae8738390a60, []int{1}
}

func (m *AnchorPeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorPeer.Unmarshal(m, b)
}
func (m *AnchorPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorPeer.Marshal(b, m, deterministic)
}
func (m *AnchorPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorPeer.Merge(m, src)
}
func (m *AnchorPeer) XXX_Size() int {
	return xxx_messageInfo_AnchorPeer.Size(m)
}
func (m *AnchorPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorPeer.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorPeer proto.InternalMessageInfo

func (m *AnchorPeer) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *AnchorPeer) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// APIResource represents an API resource in the peer whose ACL
// is determined by the policy_ref field
type APIResource struct {
	PolicyRef            string   `protobuf:"bytes,1,opt,name=policy_ref,json=policyRef,proto3" json:"policy_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIResource) Reset()         { *m = APIResource{} }
func (m *APIResource) String() string { return proto.CompactTextString(m) }
func (*APIResource) ProtoMessage()    {}
func (*APIResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_4978ae8738390a60, []int{2}
}

func (m *APIResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIResource.Unmarshal(m, b)
}
func (m *APIResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIResource.Marshal(b, m, deterministic)
}
func (m *APIResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIResource.Merge(m, src)
}
func (m *APIResource) XXX_Size() int {
	return xxx_messageInfo_APIResource.Size(m)
}
func (m *APIResource) XXX_DiscardUnknown() {
	xxx_messageInfo_APIResource.DiscardUnknown(m)
}

var xxx_messageInfo_APIResource proto.InternalMessageInfo

func (m *APIResource) GetPolicyRef() string {
	if m != nil {
		return m.PolicyRef
	}
	return ""
}

// ACLs provides mappings for resources in a channel. APIResource encapsulates
// reference to a policy used to determine ACL for the resource
type ACLs struct {
	Acls                 map[string]*APIResource `protobuf:"bytes,1,rep,name=acls,proto3" json:"acls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ACLs) Reset()         { *m = ACLs{} }
func (m *ACLs) String() string { return proto.CompactTextString(m) }
func (*ACLs) ProtoMessage()    {}
func (*ACLs) Descriptor() ([]byte, []int) {
	return fileDescriptor_4978ae8738390a60, []int{3}
}

func (m *ACLs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ACLs.Unmarshal(m, b)
}
func (m *ACLs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ACLs.Marshal(b, m, deterministic)
}
func (m *ACLs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ACLs.Merge(m, src)
}
func (m *ACLs) XXX_Size() int {
	return xxx_messageInfo_ACLs.Size(m)
}
func (m *ACLs) XXX_DiscardUnknown() {
	xxx_messageInfo_ACLs.DiscardUnknown(m)
}

var xxx_messageInfo_ACLs proto.InternalMessageInfo

func (m *ACLs) GetAcls() map[string]*APIResource {
	if m != nil {
		return m.Acls
	}
	return nil
}

// PrivateDataImplicitCollection stores the configuration for org-specific implicit collections
type PrivateDataImplicitCollection struct {
	// The minimum number of peers private data will be sent to upon
	// endorsement. The endorsement would fail if dissemination to at least
	// this number of peers is not achieved.
	RequiredPeerCount int32 `protobuf:"varint,1,opt,name=required_peer_count,json=requiredPeerCount,proto3" json:"required_peer_count,omitempty"`
	// The maximum number of peers that private data will be sent to
	// upon endorsement. This number should be greater than or equal to required_peer_count.
	MaxPeerCount int32 `protobuf:"varint,2,opt,name=max_peer_count,json=maxPeerCount,proto3" json:"max_peer_count,omitempty"`
	// The number of blocks after which the collection data expires.
	// For instance if the value is set to 10, a key last modified by block number 100
	// will be purged at block number 111. A zero value is treated same as MaxUint64
	BlockToLive uint64 `protobuf:"varint,3,opt,name=block_to_live,json=blockToLive,proto3" json:"block_to_live,omitempty"`
	// The member only read access denotes whether only collection member clients
	// can read the private data (if set to true), or even non members can
	// read the data (if set to false, for example if you want to implement more granular
	// access logic in the chaincode)
	MemberOnlyRead bool `protobuf:"varint,4,opt,name=member_only_read,json=memberOnlyRead,proto3" json:"member_only_read,omitempty"`
	// The member only write access denotes whether only collection member clients
	// can write the private data (if set to true), or even non members can
	// write the data (if set to false, for example if you want to implement more granular
	// access logic in the chaincode)
	MemberOnlyWrite      bool     `protobuf:"varint,5,opt,name=member_only_write,json=memberOnlyWrite,proto3" json:"member_only_write,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateDataImplicitCollection) Reset()         { *m = PrivateDataImplicitCollection{} }
func (m *PrivateDataImplicitCollection) String() string { return proto.CompactTextString(m) }
func (*PrivateDataImplicitCollection) ProtoMessage()    {}
func (*PrivateDataImplicitCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_4978ae8738390a60, []int{4}
}

func (m *PrivateDataImplicitCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateDataImplicitCollection.Unmarshal(m, b)
}
func (m *PrivateDataImplicitCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateDataImplicitCollection.Marshal(b, m, deterministic)
}
func (m *PrivateDataImplicitCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateDataImplicitCollection.Merge(m, src)
}
func (m *PrivateDataImplicitCollection) XXX_Size() int {
	return xxx_messageInfo_PrivateDataImplicitCollection.Size(m)
}
func (m *PrivateDataImplicitCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateDataImplicitCollection.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateDataImplicitCollection proto.InternalMessageInfo

func (m *PrivateDataImplicitCollection) GetRequiredPeerCount() int32 {
	if m != nil {
		return m.RequiredPeerCount
	}
	return 0
}

func (m *PrivateDataImplicitCollection) GetMaxPeerCount() int32 {
	if m != nil {
		return m.MaxPeerCount
	}
	return 0
}

func (m *PrivateDataImplicitCollection) GetBlockToLive() uint64 {
	if m != nil {
		return m.BlockToLive
	}
	return 0
}

func (m *PrivateDataImplicitCollection) GetMemberOnlyRead() bool {
	if m != nil {
		return m.MemberOnlyRead
	}
	return false
}

func (m *PrivateDataImplicitCollection) GetMemberOnlyWrite() bool {
	if m != nil {
		return m.MemberOnlyWrite
	}
	return false
}

func init() {
	proto.RegisterType((*AnchorPeers)(nil), "protos.AnchorPeers")
	proto.RegisterType((*AnchorPeer)(nil), "protos.AnchorPeer")
	proto.RegisterType((*APIResource)(nil), "protos.APIResource")
	proto.RegisterType((*ACLs)(nil), "protos.ACLs")
	proto.RegisterMapType((map[string]*APIResource)(nil), "protos.ACLs.AclsEntry")
	proto.RegisterType((*PrivateDataImplicitCollection)(nil), "protos.PrivateDataImplicitCollection")
}

func init() { proto.RegisterFile("peer/configuration.proto", fileDescriptor_4978ae8738390a60) }

var fileDescriptor_4978ae8738390a60 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0x41, 0x6b, 0xdb, 0x40,
	0x10, 0x85, 0x51, 0x6c, 0x97, 0x7a, 0x94, 0xa6, 0xc9, 0x06, 0x8a, 0x28, 0x04, 0x84, 0xe8, 0x41,
	0x0d, 0x89, 0x0c, 0x69, 0x0b, 0xa5, 0x37, 0xd7, 0xe9, 0x21, 0x60, 0xa8, 0x59, 0x0a, 0x85, 0x5e,
	0xc4, 0x6a, 0x3d, 0x96, 0x97, 0xac, 0xb4, 0xea, 0x68, 0xe5, 0x46, 0xb7, 0xfe, 0xe3, 0xfe, 0x85,
	0xb2, 0x52, 0x6c, 0xf9, 0xa4, 0xd1, 0x9b, 0xef, 0x0d, 0x8f, 0xc7, 0x42, 0x50, 0x21, 0xd2, 0x4c,
	0x9a, 0x72, 0xa3, 0xf2, 0x86, 0x84, 0x55, 0xa6, 0x4c, 0x2a, 0x32, 0xd6, 0xb0, 0x17, 0xdd, 0xa7,
	0x8e, 0xee, 0xc1, 0x9f, 0x97, 0x72, 0x6b, 0x68, 0x85, 0x48, 0x35, 0xfb, 0x04, 0xa7, 0xa2, 0xfb,
	0x4d, 0x9d, 0xb3, 0x0e, 0xbc, 0x70, 0x14, 0xfb, 0x77, 0xac, 0x37, 0xd5, 0xc9, 0x80, 0x72, 0x5f,
	0x0c, 0xb6, 0xe8, 0x23, 0xc0, 0xb0, 0x62, 0x0c, 0xc6, 0x5b, 0x53, 0xdb, 0xc0, 0x0b, 0xbd, 0x78,
	0xca, 0xbb, 0xd9, 0x69, 0x95, 0x21, 0x1b, 0x9c, 0x84, 0x5e, 0x3c, 0xe1, 0xdd, 0x1c, 0xdd, 0x80,
	0x3f, 0x5f, 0x3d, 0x70, 0xac, 0x4d, 0x43, 0x12, 0xd9, 0x15, 0x40, 0x65, 0xb4, 0x92, 0x6d, 0x4a,
	0xb8, 0x79, 0x36, 0x4f, 0x7b, 0x85, 0xe3, 0x26, 0xfa, 0xeb, 0xc1, 0x78, 0xbe, 0x58, 0xd6, 0xec,
	0x1a, 0xc6, 0x42, 0xea, 0x7d, 0xb6, 0x37, 0x87, 0x6c, 0x8b, 0x65, 0x9d, 0xcc, 0xa5, 0xae, 0xbf,
	0x95, 0x96, 0x5a, 0xde, 0x31, 0x6f, 0x97, 0x30, 0x3d, 0x48, 0xec, 0x1c, 0x46, 0x8f, 0xd8, 0x3e,
	0x5f, 0x76, 0x23, 0x7b, 0x0f, 0x93, 0x9d, 0xd0, 0x0d, 0x76, 0xb1, 0xfc, 0xbb, 0xcb, 0xc3, 0xad,
	0x21, 0x16, 0xef, 0x89, 0x2f, 0x27, 0x9f, 0xbd, 0xe8, 0x9f, 0x07, 0x57, 0x2b, 0x52, 0x3b, 0x61,
	0xf1, 0x5e, 0x58, 0xf1, 0x50, 0x54, 0x5a, 0x49, 0x65, 0x17, 0x46, 0x6b, 0x94, 0xae, 0x5c, 0x96,
	0xc0, 0x25, 0xe1, 0xef, 0x46, 0x11, 0xae, 0xbb, 0x06, 0x53, 0x69, 0x9a, 0xb2, 0x6f, 0x62, 0xc2,
	0x2f, 0xf6, 0x2b, 0xd7, 0xd2, 0xc2, 0x2d, 0xd8, 0x3b, 0x38, 0x2b, 0xc4, 0xd3, 0x31, 0xda, 0x17,
	0x74, 0x5a, 0x88, 0xa7, 0x81, 0x8a, 0xe0, 0x55, 0xa6, 0x8d, 0x7c, 0x4c, 0xad, 0x49, 0xb5, 0xda,
	0x61, 0x30, 0x0a, 0xbd, 0x78, 0xcc, 0xfd, 0x4e, 0xfc, 0x61, 0x96, 0x6a, 0x87, 0x2c, 0x86, 0xf3,
	0x02, 0x8b, 0x0c, 0x29, 0x35, 0xa5, 0x76, 0x15, 0x8a, 0x75, 0x30, 0x0e, 0xbd, 0xf8, 0x25, 0x3f,
	0xeb, 0xf5, 0xef, 0xa5, 0x6e, 0x39, 0x8a, 0x35, 0xbb, 0x86, 0x8b, 0x63, 0xf2, 0x0f, 0x29, 0x8b,
	0xc1, 0xa4, 0x43, 0x5f, 0x0f, 0xe8, 0x4f, 0x27, 0x7f, 0xe5, 0x10, 0x19, 0xca, 0x93, 0x6d, 0x5b,
	0x21, 0x69, 0x5c, 0xe7, 0x48, 0xc9, 0x46, 0x64, 0xa4, 0xe4, 0xbe, 0x29, 0x97, 0xfc, 0xd7, 0x4d,
	0xae, 0xec, 0xb6, 0xc9, 0x12, 0x69, 0x8a, 0xd9, 0x11, 0x3a, 0xeb, 0xd1, 0xdb, 0x1e, 0xbd, 0xcd,
	0xcd, 0xcc, 0xd1, 0x59, 0xff, 0xf4, 0x3e, 0xfc, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x28, 0x3f,
	0x27, 0x9d, 0x02, 0x00, 0x00,
}
